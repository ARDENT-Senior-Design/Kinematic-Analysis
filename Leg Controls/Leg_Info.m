function ardent_leg=Leg_Info()
clear L
deg = pi/180;

% joint angle limits from 
% A combined optimization method for solving the inverse kinematics problem...
% Wang & Chen
% IEEE Trans. RA 7(4) 1991 pp 489-

% all parameters are in SI units: m, radians, kg, kg.m2, N.m, N.m.s etc.
L(1) = Revolute('d', 0, ...   % link length (Dennavit-Hartenberg notation)
    'a', 0.1, ...               % link offset (Dennavit-Hartenberg notation)
    'alpha', pi/2, ...        % link twist (Dennavit-Hartenberg notation)
    'I', [0, 0.00008, 0, 0, 0, 0], ... % inertia tensor of link with respect to center of mass I = [L_xx, L_yy, L_zz, L_xy, L_yz, L_xz]
    'r', [0, 0, 0], ...       % distance of ith origin to center of mass [x,y,z] in link reference frame
    'm', 0.1, ...               % mass of link
    'Jm', 200e-6, ...         % actuator inertia 
    'G', -35, ...        % gear ratio
    'B', 0, ...         % actuator viscous friction coefficient (measured at the motor)
    'Tc', [0.395 -0.435], ... % actuator Coulomb friction coefficient for direction [-,+] (measured at the motor)
    'qlim', [-360 360]*deg ); % minimum and maximum joint angle

L(2) = Revolute('d', -0.065, 'a', 0.25, 'alpha', 0, ...
    'I', [0.37, 0.37, 0.01, 0, 0, 0], ...
    'r', [-0.2, 0.0, 0.0], ...
    'm', 1.3, ...
    'Jm', 200e-6, ...
    'G', -25, ...
    'B', 0, ...
    'Tc', [0.126 -0.071], ...
    'qlim', [-170 170]*deg );

L(3) = Revolute('d', 0.065, 'a', 0.25, 'alpha', -pi/2,  ...
    'I', [0.09, 0.09, 0.0, 0, 0, 0], ...
    'r', [-0.125, -0.0, 0.0], ...
    'm', 0.25, ...
    'Jm', 200e-6, ...
    'G', -25, ...
    'B', 0, ...
    'Tc', [0.132, -0.105], ...
    'qlim', [-170 170]*deg );
ardent_leg = SerialLink(L, 'name', 'Ardent Leg');%, ...
  %  'configs', {'qz', qz, 'qr', qr, 'qs', qs, 'qn', qn}, ...
    %'manufacturer', 'Unimation', 'ikine', 'ardent', 'comment', 'viscous friction; params of 8/95');
Ttool = transl([0 0 0]);
ardemt_leg.tool = Ttool;
Tbase = transl([0 0 0]);
ardent_leg.base = Tbase;
